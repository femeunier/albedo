
R version 3.4.4 (2018-03-15) -- "Someone to Lean On"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> rm(list = ls())
> 
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(tidyr)
> library(PEcAnRTM)

Attaching package: ‘PEcAnRTM’

The following object is masked from ‘package:graphics’:

    matplot

> library(purrr)
> library(rrtm)
> library(ED2scenarios)
> library(PEcAn.ED2)
Loading required package: PEcAn.utils

Attaching package: ‘PEcAn.utils’

The following object is masked from ‘package:utils’:

    download.file

Loading required package: coda
> library(purrr)
> library(ggplot2)
> 
> file2load <- "~/Documents/R/edr-da/data/All_parameters.RDS"
> All.parameters <- readRDS(file2load)
> 
> Refs_for_Prospect <- c("Guzman","Kalacska","Castro_PNM","Castro_FTS","Sanchez_PNM","Sanchez_FTS","Foster","Marvin","Kalacska_RTM","Sanchez")
> Params_for_Prospect <- c("Cab","Car","Cw","Cm","Nlayers")
> 
> Nsimulations <- 250
> Npicks <- 250
> 
> df.spectra.all <- data.frame()
> 
> for (isimu in seq(1,Nsimulations)){
+   print(isimu/Nsimulations)
+   #Pick up one reference for Prospect/ED_RTM
+   Ref_prospect <- Refs_for_Prospect[sample(1:length(Refs_for_Prospect),1)]
+   
+   params_prospect <- All.parameters %>% filter(ref == Ref_prospect,
+                                                Param %in% Params_for_Prospect) %>% group_by(pft,Param) %>% sample_n(size = Npicks) %>% 
+     ungroup() %>% arrange(Param) %>% mutate(id = rep(1:(Npicks),2*length(Params_for_Prospect))) %>% pivot_wider(names_from = Param,
+                                                                                                                 values_from = value)
+   Lianas_params <- params_prospect %>% filter(pft == "Liana_optical") %>% dplyr::select(Params_for_Prospect)
+   Trees_params <- params_prospect %>% filter(pft == "Tree_optical") %>% dplyr::select(Params_for_Prospect)
+   
+   df.spectra <- data.frame()
+   
+   for (i in seq(1,nrow(Lianas_params))){
+     cparam_liana <- as.vector(t(Lianas_params[i,]))
+     cparam_tree <- as.vector(t(Trees_params[i,]))
+     cspectrum_liana <- prospect5(N = cparam_liana[5],cparam_liana[1],cparam_liana[2],cparam_liana[3],cparam_liana[4])
+     cspectrum_tree <- prospect5(N = cparam_tree[5],cparam_tree[1],cparam_tree[2],cparam_tree[3],cparam_tree[4])
+     
+     df.spectra <- rbind(df.spectra,
+                         rbind(data.frame(waves = 400:2500,
+                                          reflectance = cspectrum_liana$reflectance,
+                                          transmittance = cspectrum_liana$transmittance,
+                                          pft = "Liana",
+                                          simu = isimu,
+                                          rep = i),
+                               data.frame(waves = 400:2500,
+                                          reflectance = cspectrum_tree$reflectance,
+                                          transmittance = cspectrum_tree$transmittance,
+                                          pft = "Tree",
+                                          simu = isimu,
+                                          rep = i)))
+   }
+   
+   df.spectra.sum <- df.spectra %>% group_by(waves,pft) %>% summarise(reflectance = mean(reflectance),
+                                                                      transmittance = mean(transmittance))
+   
+   df.spectra.all <- bind_rows(list(df.spectra.all,
+                                    df.spectra.sum %>% mutate(simu = isimu)))
+ }
[1] 0.004
[1] 0.008
[1] 0.012
[1] 0.016
[1] 0.02
[1] 0.024
[1] 0.028
[1] 0.032
[1] 0.036
[1] 0.04
[1] 0.044
[1] 0.048
[1] 0.052
[1] 0.056
[1] 0.06
[1] 0.064
[1] 0.068
[1] 0.072
[1] 0.076
[1] 0.08
[1] 0.084
[1] 0.088
[1] 0.092
[1] 0.096
[1] 0.1
[1] 0.104
[1] 0.108
[1] 0.112
[1] 0.116
[1] 0.12
[1] 0.124
[1] 0.128
[1] 0.132
[1] 0.136
[1] 0.14
[1] 0.144
[1] 0.148
[1] 0.152
[1] 0.156
[1] 0.16
[1] 0.164
[1] 0.168
[1] 0.172
[1] 0.176
[1] 0.18
[1] 0.184
[1] 0.188
[1] 0.192
[1] 0.196
[1] 0.2
[1] 0.204
[1] 0.208
[1] 0.212
[1] 0.216
[1] 0.22
[1] 0.224
[1] 0.228
[1] 0.232
[1] 0.236
[1] 0.24
[1] 0.244
[1] 0.248
[1] 0.252
[1] 0.256
[1] 0.26
[1] 0.264
[1] 0.268
[1] 0.272
[1] 0.276
[1] 0.28
[1] 0.284
[1] 0.288
[1] 0.292
[1] 0.296
[1] 0.3
[1] 0.304
[1] 0.308
[1] 0.312
[1] 0.316
[1] 0.32
[1] 0.324
[1] 0.328
[1] 0.332
[1] 0.336
[1] 0.34
[1] 0.344
[1] 0.348
[1] 0.352
[1] 0.356
[1] 0.36
[1] 0.364
[1] 0.368
[1] 0.372
[1] 0.376
[1] 0.38
[1] 0.384
[1] 0.388
[1] 0.392
[1] 0.396
[1] 0.4
[1] 0.404
[1] 0.408
[1] 0.412
[1] 0.416
[1] 0.42
[1] 0.424
[1] 0.428
[1] 0.432
[1] 0.436
[1] 0.44
[1] 0.444
[1] 0.448
[1] 0.452
[1] 0.456
[1] 0.46
[1] 0.464
[1] 0.468
[1] 0.472
[1] 0.476
[1] 0.48
[1] 0.484
[1] 0.488
[1] 0.492
[1] 0.496
[1] 0.5
[1] 0.504
[1] 0.508
[1] 0.512
[1] 0.516
[1] 0.52
[1] 0.524
[1] 0.528
[1] 0.532
[1] 0.536
[1] 0.54
[1] 0.544
[1] 0.548
[1] 0.552
[1] 0.556
[1] 0.56
[1] 0.564
[1] 0.568
[1] 0.572
[1] 0.576
[1] 0.58
[1] 0.584
[1] 0.588
[1] 0.592
[1] 0.596
[1] 0.6
[1] 0.604
[1] 0.608
[1] 0.612
[1] 0.616
[1] 0.62
[1] 0.624
[1] 0.628
[1] 0.632
[1] 0.636
[1] 0.64
[1] 0.644
[1] 0.648
[1] 0.652
[1] 0.656
[1] 0.66
[1] 0.664
[1] 0.668
[1] 0.672
[1] 0.676
[1] 0.68
[1] 0.684
[1] 0.688
[1] 0.692
[1] 0.696
[1] 0.7
[1] 0.704
[1] 0.708
[1] 0.712
[1] 0.716
[1] 0.72
[1] 0.724
[1] 0.728
[1] 0.732
[1] 0.736
[1] 0.74
[1] 0.744
[1] 0.748
[1] 0.752
[1] 0.756
[1] 0.76
[1] 0.764
[1] 0.768
[1] 0.772
[1] 0.776
[1] 0.78
[1] 0.784
[1] 0.788
[1] 0.792
[1] 0.796
[1] 0.8
[1] 0.804
[1] 0.808
[1] 0.812
[1] 0.816
[1] 0.82
[1] 0.824
[1] 0.828
[1] 0.832
[1] 0.836
[1] 0.84
[1] 0.844
[1] 0.848
[1] 0.852
[1] 0.856
[1] 0.86
[1] 0.864
[1] 0.868
[1] 0.872
[1] 0.876
[1] 0.88
[1] 0.884
[1] 0.888
[1] 0.892
[1] 0.896
[1] 0.9
[1] 0.904
[1] 0.908
[1] 0.912
[1] 0.916
[1] 0.92
[1] 0.924
[1] 0.928
[1] 0.932
[1] 0.936
[1] 0.94
[1] 0.944
[1] 0.948
[1] 0.952
[1] 0.956
[1] 0.96
[1] 0.964
[1] 0.968
[1] 0.972
[1] 0.976
[1] 0.98
[1] 0.984
[1] 0.988
[1] 0.992
[1] 0.996
[1] 1
> 
> saveRDS(file = "./data/Leaf.posteriors.RDS",object = df.spectra.all)
> 
> diff <- df.spectra.all %>% pivot_wider(names_from = pft,values_from = c(reflectance,transmittance)) %>% group_by(simu,waves) %>% 
+   summarise(diff_r = reflectance_Liana - reflectance_Tree,
+             diff_t = transmittance_Liana - transmittance_Tree)
> 
> diff_sum <- diff %>% group_by(waves) %>% summarise(diff_r_mean = mean(diff_r),
+                                                    diff_t_mean = mean(diff_t),
+                                                    diff_r_min = min(diff_r),
+                                                    diff_r_max = max(diff_r),
+                                                    diff_r_alphamin = quantile(diff_r,0.05),
+                                                    diff_r_alphamax = quantile(diff_r,0.95),
+                                                    diff_t_min = min(diff_t),
+                                                    diff_t_max = max(diff_t),
+                                                    diff_t_alphamin = quantile(diff_t,0.05),
+                                                                                             diff_t_alphamin = quantile(diff_t,0.05),
+                                                    diff_t_alphamax = quantile(diff_t,0.95))
> 
> All <- df.spectra.all %>% group_by(waves,pft) %>% summarise(r_mean = mean(reflectance),
+                                                         r_min = min(reflectance),
+                                                         r_max = max(reflectance),
+                                                         t_mean = mean(transmittance),
+                                                         t_min = min(transmittance),
+                                                         t_max = max(transmittance))
> 
> ggplot() +
+   geom_ribbon(data = diff_sum, aes(x = waves,ymin = diff_r_alphamin,ymax = diff_r_alphamax),fill = "darkgrey",alpha=0.3) +
+   geom_ribbon(data = diff_sum, aes(x = waves,ymax = 1 - diff_t_alphamin,ymin = 1 - diff_t_alphamax),fill = "darkgrey",alpha=0.3) +
+   geom_line(data = diff_sum, aes(x = waves,colour = pft,y = diff_r_mean),color = "black") +
+   geom_line(data = diff_sum, aes(x = waves,colour = pft,y = 1-diff_t_mean),linetype = 1,color = "black") +
+   geom_line(data = All, aes(x = waves,colour = pft,y = r_mean)) +
+   geom_line(data = All, aes(x = waves,colour = pft,y = 1-t_mean),linetype = 1) +
+   scale_y_continuous(sec.axis = sec_axis(trans = ~ 1 - 1 * ., name = "Transmittance [-]",breaks = seq(0,0.6,0.2)),
+                      breaks = seq(0,0.6,0.2),expand = c(0,0)) +
+   geom_hline(yintercept = c(0,1),linetype=3)+
+   scale_color_manual(values = c("#1E64C8","#137300")) +
+   labs(y = "Reflectance [-]",
+        x = "Wavelength [nm]") +
+   theme_bw() + theme(text = element_text(size = 14),
+                      axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0),hjust=0.25),
+                      axis.title.y.right = element_text(margin = margin(t = 0, r = 0, b = 0, l = 10)),
+                      axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
> 
> ggsave(plot = last_plot(),dpi = 300, width = 20,height = 12, filename = file.path("./Figures","Leaf.spectrum.posterior_large.png"),units = "cm")
> 
> ggplot() +
+   geom_ribbon(data = diff_sum, aes(x = waves,ymin = diff_r_alphamin,ymax = diff_r_alphamax),fill = "darkgrey",alpha=0.3) +
+   geom_ribbon(data = diff_sum, aes(x = waves,ymax = 1 - diff_t_alphamin,ymin = 1 - diff_t_alphamax),fill = "darkgrey",alpha=0.3) +
+   geom_line(data = diff_sum, aes(x = waves,colour = pft,y = diff_r_mean),color = "black") +
+   geom_line(data = diff_sum, aes(x = waves,colour = pft,y = 1-diff_t_mean),linetype = 1,color = "black") +
+   geom_line(data = All, aes(x = waves,colour = pft,y = r_mean)) +
+   geom_line(data = All, aes(x = waves,colour = pft,y = 1-t_mean),linetype = 1) +
+   scale_y_continuous(sec.axis = sec_axis(trans = ~ 1 - 1 * ., name = "Transmittance [-]",breaks = seq(0,1,0.2)),
+                      breaks = seq(0,1,0.2),expand = c(0,0)) +
+   scale_x_continuous(limits = c(400,1000),expand = c(0,0)) +
+   geom_hline(yintercept = c(0,1),linetype=3)+
+   scale_color_manual(values = c("#1E64C8","#137300")) +
+   labs(y = "Reflectance [-]",
+        x = "Wavelength [nm]") +
+   theme_bw() + theme(text = element_text(size = 14),
+                      axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
+                      axis.title.y.right = element_text(margin = margin(t = 0, r = 0, b = 0, l = 10)),
+                      axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
Warning messages:
1: Removed 1500 row(s) containing missing values (geom_path). 
2: Removed 1500 row(s) containing missing values (geom_path). 
3: Removed 3000 row(s) containing missing values (geom_path). 
4: Removed 3000 row(s) containing missing values (geom_path). 
> 
> ggsave(plot = last_plot(),dpi = 300, width = 30,height = 20, filename = file.path("./Figures","Leaf.spectrum.posterior.png"),units = "cm")
Warning messages:
1: Removed 1500 row(s) containing missing values (geom_path). 
2: Removed 1500 row(s) containing missing values (geom_path). 
3: Removed 3000 row(s) containing missing values (geom_path). 
4: Removed 3000 row(s) containing missing values (geom_path). 
> 
> 
> proc.time()
    user   system  elapsed 
5024.702   34.578 5092.265 
